// <auto-generated />
using System;
using CompanyV4.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CompanyV4.Infrastructure.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20240816064838_addnullworks")]
    partial class addnullworks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanyV4.Domain.Models.Department", b =>
                {
                    b.Property<int>("DeptNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeptNo"));

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("MgrEmpNo")
                        .HasColumnType("integer");

                    b.HasKey("DeptNo");

                    b.HasIndex("MgrEmpNo")
                        .IsUnique();

                    b.ToTable("Departements");
                });

            modelBuilder.Entity("CompanyV4.Domain.Models.Employee", b =>
                {
                    b.Property<int>("EmpNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmpNo"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DeptNo")
                        .HasColumnType("integer");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.HasKey("EmpNo");

                    b.HasIndex("DeptNo");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CompanyV4.Domain.Models.Project", b =>
                {
                    b.Property<int>("ProjNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProjNo"));

                    b.Property<int?>("DeptNo")
                        .HasColumnType("integer");

                    b.Property<string>("ProjName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProjNo");

                    b.HasIndex("DeptNo");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CompanyV4.Domain.Models.WorksOn", b =>
                {
                    b.Property<int?>("EmpNo")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjNo")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateWorked")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("HoursWorked")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("EmpNo", "ProjNo", "DateWorked");

                    b.HasIndex("ProjNo");

                    b.ToTable("Worksons");
                });

            modelBuilder.Entity("CompanyV4.Domain.Models.Department", b =>
                {
                    b.HasOne("CompanyV4.Domain.Models.Employee", "Manager")
                        .WithOne()
                        .HasForeignKey("CompanyV4.Domain.Models.Department", "MgrEmpNo");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("CompanyV4.Domain.Models.Employee", b =>
                {
                    b.HasOne("CompanyV4.Domain.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DeptNo");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CompanyV4.Domain.Models.Project", b =>
                {
                    b.HasOne("CompanyV4.Domain.Models.Department", "Department")
                        .WithMany("Projects")
                        .HasForeignKey("DeptNo");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CompanyV4.Domain.Models.WorksOn", b =>
                {
                    b.HasOne("CompanyV4.Domain.Models.Employee", "Employee")
                        .WithMany("WorksOns")
                        .HasForeignKey("EmpNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyV4.Domain.Models.Project", "Project")
                        .WithMany("WorksOns")
                        .HasForeignKey("ProjNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("CompanyV4.Domain.Models.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("CompanyV4.Domain.Models.Employee", b =>
                {
                    b.Navigation("WorksOns");
                });

            modelBuilder.Entity("CompanyV4.Domain.Models.Project", b =>
                {
                    b.Navigation("WorksOns");
                });
#pragma warning restore 612, 618
        }
    }
}
